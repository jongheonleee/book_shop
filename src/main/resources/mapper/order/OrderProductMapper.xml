<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastcampus.ch4.dao.order.OrderProductMapper">
    <insert id="insert" parameterType="OrderProductDto" useGeneratedKeys="true" keyProperty="ord_prod_seq">
        INSERT INTO book_shop.order_prod
        (ord_seq,
         isbn,
         prod_type_code,
         ord_stat,
         deli_stat,
         pay_stat,
         cust_id,
         book_title,
         item_quan,
         point_perc,
         point_pric,
         basic_pric,
         disc_perc,
         disc_pric,
         sale_pric,
         ord_pric,
         repre_img,
         reg_date,
         reg_id,
         up_date,
         up_id,
         updated_at,
         created_at)
        VALUES (#{ord_seq},
                #{isbn},
                #{prod_type_code},
                #{ord_stat},
                #{deli_stat},
                #{pay_stat},
                #{cust_id},
                #{book_title},
                #{item_quan},
                #{point_perc},
                #{point_pric},
                #{basic_pric},
                #{disc_perc},
                #{disc_pric},
                #{sale_pric},
                #{ord_pric},
                #{repre_img},
                NOW(),
                #{reg_id},
                NOW(),
                #{up_id},
                NOW(),
                NOW())
    </insert>

    <insert id="insertOrderProductStat" parameterType="OrderProductDto" useGeneratedKeys="true" keyProperty="ord_prod_seq">
        INSERT INTO book_shop.order_prod
        (ord_seq,
         isbn,
         prod_type_code,
         ord_stat,
         deli_stat,
         pay_stat,
         cust_id,
         book_title,
         item_quan,
         point_perc,
         point_pric,
         basic_pric,
         disc_perc,
         disc_pric,
         sale_pric,
         ord_pric,
         repre_img,
         reg_date,
         reg_id,
         up_date,
         up_id,
         updated_at,
         created_at)
        VALUES (#{ord_seq},
                #{isbn},
                #{prod_type_code},
                (SELECT code_id FROM book_shop.code code WHERE code.code = #{ord_stat_code}),
                (SELECT code_id FROM book_shop.code code WHERE code.code = #{deli_stat_code}),
                (SELECT code_id FROM book_shop.code code WHERE code.code = #{pay_stat_code}),
                #{cust_id},
                #{book_title},
                #{item_quan},
                #{point_perc},
                #{point_pric},
                #{basic_pric},
                #{disc_perc},
                #{disc_pric},
                #{sale_pric},
                #{ord_pric},
                #{repre_img},
                NOW(),
                #{reg_id},
                NOW(),
                #{up_id},
                NOW(),
                NOW())
    </insert>

    <select id="selectListOrderProductByCondition" parameterType="OrderProductSearchCondition" resultType="OrderProductDto">
        SELECT
        ordProdT.ord_prod_seq,
        ordProdT.ord_seq,
        ordProdT.isbn,
        ordProdT.prod_type_code,
        ord_stat.code_id AS ord_stat,
        ord_stat.code AS ord_stat_code,
        ord_stat.code_name AS ord_stat_name,
        deli_stat.code_id AS deli_stat,
        deli_stat.code AS deli_stat_code,
        deli_stat.code_name AS deli_stat_name,
        pay_stat.code_id AS pay_stat,
        pay_stat.code AS pay_stat_code,
        pay_stat.code_name AS pay_stat_name,
        ordProdT.cust_id,
        ordProdT.book_title,
        ordProdT.item_quan,
        ordProdT.point_perc,
        ordProdT.point_pric,
        ordProdT.basic_pric,
        ordProdT.disc_perc,
        ordProdT.disc_pric,
        ordProdT.sale_pric,
        ordProdT.ord_pric,
        ordProdT.repre_img,
        ordProdT.reg_date,
        ordProdT.reg_id,
        ordProdT.up_date,
        ordProdT.up_id,
        ordProdT.updated_at,
        ordProdT.created_at
        FROM book_shop.order_prod ordProdT
        INNER JOIN book_shop.code ord_stat ON ord_stat.code_id = ordProdT.ord_stat
        INNER JOIN book_shop.code deli_stat ON deli_stat.code_id = ordProdT.deli_stat
        INNER JOIN book_shop.code pay_stat ON pay_stat.code_id = ordProdT.pay_stat
        <where>
            <if test="ord_prod_seq != null">
                ord_prod_seq = #{ord_prod_seq}
            </if>
            <if test="ord_seq != null">
                AND ord_seq = #{ord_seq}
            </if>
            <if test="ord_stat != null">
                AND ord_stat = #{ord_stat}
            </if>
            <if test="deli_stat != null">
                AND deli_stat = #{deli_stat}
            </if>
            <if test="pay_stat != null">
                AND pay_stat = #{pay_stat}
            </if>
            <if test="cust_id != null">
                AND cust_id = #{cust_id}
            </if>
        </where>
    </select>

    <update id="updateOrderProduct" parameterType="object">
        UPDATE
        book_shop.order_prod
        <set>
            up_date = NOW(),
            up_id = #{up_id},
            updated_at = NOW(),
            <if test="ord_stat != null">
                ord_stat = #{ord_stat},
            </if>
            <if test="deli_stat != null">
                deli_stat = #{deli_stat},
            </if>
            <if test="pay_stat != null">
                pay_stat = #{pay_stat},
            </if>
            <if test="book_title != null">
                book_title = #{book_title},
            </if>
            <if test="item_quan != null">
                item_quan = #{item_quan},
            </if>
            <if test="point_perc != null">
                point_perc = #{point_perc},
            </if>
            <if test="point_pric != null">
                point_pric = #{point_pric},
            </if>
            <if test="basic_pric != null">
                basic_pric = #{basic_pric},
            </if>
            <if test="disc_perc != null">
                disc_perc = #{disc_perc},
            </if>
            <if test="disc_pric != null">
                disc_pric = #{disc_pric},
            </if>
            <if test="sale_pric != null">
                sale_pric = #{sale_pric},
            </if>
            <if test="ord_pric != null">
                ord_pric = #{ord_pric},
            </if>
            <if test="repre_img != null">
                repre_img = #{repre_img},
            </if>
        </set>
        WHERE
            ord_prod_seq = #{ord_prod_seq}
    </update>
    
    <delete id="deleteOrderProductByCondition" parameterType="map">
        DELETE
        FROM book_shop.order_prod
        <choose>
            <when test="ord_seq != null and ord_prod_seq == null and cust_id != null">
                WHERE ord_seq = #{ord_seq}
            </when>
            <when test="ord_seq == null and ord_prod_seq != null and cust_id == null">
                WHERE ord_prod_seq = #{ord_prod_seq}
            </when>
            <when test="ord_seq == null and ord_prod_seq == null and cust_id != null">
                WHERE cust_id = #{cust_id}
            </when>
            <otherwise>
                WHERE 1 = 2
            </otherwise>
        </choose>
    </delete>
</mapper>